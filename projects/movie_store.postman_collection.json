{
	"info": {
		"_postman_id": "86ce92fb-530a-4184-aa2f-cc1aa98a6cad",
		"name": "Movie_Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "34663841"
	},
	"item": [
		{
			"name": "PostMovie",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"",
							"pm.test(\"Response status code is 201\", function () {",
							"    pm.expect(pm.response.code).to.equal(201);",
							"});",
							"",
							"",
							"pm.test(\"Response is an object\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"});",
							"",
							"",
							"pm.test(\"Response has the required fields\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData).to.have.property('id');",
							"  pm.expect(responseData).to.have.property('title');",
							"  pm.expect(responseData).to.have.property('productionDate');",
							"  pm.expect(responseData).to.have.property('producer');",
							"  pm.expect(responseData).to.have.property('rating');",
							"});",
							"",
							"",
							"pm.test(\"Title is a non-empty string\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('object');",
							"    pm.expect(responseData.title).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Title should not be empty\");",
							"});",
							"",
							"",
							"pm.test(\"Production date, producer, and rating are in the expected format and values\", function () {",
							"  const responseData = pm.response.json();",
							"  ",
							"  pm.expect(responseData).to.be.an('object');",
							"  pm.expect(responseData.productionDate).to.be.a('string').and.to.not.be.empty;",
							"  pm.expect(responseData.producer).to.be.a('string').and.to.not.be.empty;",
							"  pm.expect(responseData.rating).to.be.a('number').and.to.be.at.least(0);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetMovies",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.code).to.equal(200);",
							"});",
							"",
							"",
							"pm.test(\"Response has the required Content-Type header set to application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetMovieById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movies/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "TestAPI",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 300ms\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							"pm.test(\"Each movie in the array has valid properties\", function () {\r",
							"  var movies = pm.response.json();\r",
							"  movies.forEach(function(movie) {\r",
							"    pm.expect(movie).to.be.an('object').and.to.have.property('id');\r",
							"  });\r",
							"});\r",
							"\r",
							"pm.test(\"Response is an array\", function () {\r",
							"  pm.expect(pm.response.json()).to.be.an('array');\r",
							"});\r",
							"\r",
							"pm.test(\"Each movie in the array has a productionDate of '2010-07-16'\", function () {\r",
							"  pm.response.json().forEach(function(movie) {\r",
							"    pm.expect(movie.productionDate).to.equal('2010-07-16');\r",
							"  });\r",
							"});\r",
							"\r",
							"pm.test(\"Each movie in the array has a producer of 'Emma Thomas'\", function () {\r",
							"  pm.response.json().forEach(function(movie) {\r",
							"    pm.expect(movie.producer).to.equal('Emma Thomas');\r",
							"  });\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Each movie in the array has a rating of 8.8\", function () {\r",
							"  pm.response.json().forEach(function(movie) {\r",
							"    pm.expect(movie.rating).to.equal(8.8);\r",
							"  });\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteById",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movies/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetMovieDeleted",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 200\", function () {",
							"    pm.expect(pm.response.to.have.status(200));",
							"});",
							"",
							"",
							"pm.test(\"Content-Type header is application/json\", function () {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"  pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"",
							"pm.test(\"Validate the required fields in the response\", function () {",
							"    const responseData = pm.response.json();",
							"    ",
							"    pm.expect(responseData).to.be.an('array');",
							"    responseData.forEach(movie => {",
							"        pm.expect(movie).to.have.property('id');",
							"        pm.expect(movie).to.have.property('title');",
							"        pm.expect(movie).to.have.property('productionDate');",
							"        pm.expect(movie).to.have.property('producer');",
							"        pm.expect(movie).to.have.property('rating');",
							"    });",
							"});",
							"",
							"",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Inception\",\r\n  \"productionDate\": \"2010-07-16\",\r\n  \"producer\": \"Emma Thomas\",\r\n  \"rating\": 8.8\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/movies",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"movies"
					]
				}
			},
			"response": []
		}
	]
}