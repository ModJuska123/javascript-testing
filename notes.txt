###Naudingi URL:
----------------------------------------------------------------------------------------
Git'o instaliavimas Windows:
https://git-scm.com/downloads
----------------------------------------------------------------------------------
Jauniaus Github:
https://github.com/JauniusPinelis/Javascript-testing/blob/main/homeworks/2.%20Rest%20and%20Postman.txt
-------------------------------------------------------------------------------------
Postman instalai:
https://www.postman.com/downloads/
------------------------------------------------------------------------------------
PostgreDB instalai:
https://www.postgresql.org/
https://www.pgadmin.org/
https://www.enterprisedb.com/downloads/postgres-postgresql-downloads
--------------------------------------------------------------------------------

###Homeworks:
Homework1:+
1. If you do not have 'Git' installed, install it.
2. Create a Github Account.
3. Create ChatGPT account.
4. Generate (with chatgpt) node.js express REST API for shop and item management.
5. Create repository with this code. (do not forget .gitignore)
6. Be able to launch node.js locally.

Additional Optional:
1. Cover your api with swagger. #NEATLIKTAS
---------------------------------

Homework2:-

https://github.com/JauniusPinelis/Javascript-testing/blob/main/homeworks/2.%20Rest%20and%20Postman.txt

1. Install Postman on your laptop/pc
https://www.postman.com/downloads/

2. In the first homework REST api with node.js/express.
Use ChatGPT to update the code (or do it yourself) to be able:
Shops:
Create new shop, get All shops
Items:
Create new item, get all items

3. Create request in Postman to use your api:
Create new shop, get all shops, create new items, get all items.

Additional/optional:

4. Status codes are important?
What are the differences between 200,201,400,401,403,404,500.

5. Update your code with Delete, Update functionalities 
and create Postman Requests for those.

---------------------------------------
Homework3:-

You already have a node.js express application for Shop and ShopItem management. //čia seno ND užduotis.
The repo also contains PostmanCollection to test these calls.

1. I should be able to run tests with 'npm run test'. //Kaip paleisti testus su npm run tests?
This means i should have a dev dependency to newman. //kas yra Newman? Kas yra dev dependency to newman?

2. 'npm run test:report' should generate an htmlextra report.  //kas per komanda nppm run test? Kas yra htpmlextara raportas?
Report should not be committed to repo. (.gitignore should be updated) //kaip sukomitinti tą raportą?

3. Try using Postman Variables and environments. BaseUrl should be an environment variable. //Kas yra Variables ir env Postamane? kas yra BaseUrl?
This will require to export environment as a file as well. //Kaip exportuoti env failus?

Nothing should be installed with -g
-------------------------------------------
Homework5:-
1. Try Create a github action for node.js pipeline.
2. Try running this github action manually.
Its ok that pipeline fails.
---------------------------------------------
Homework6:-
You have a public api with swagger documentation:
https://petstore.swagger.io/

1. Use postman to import 'petstore' Collection from Swagger.
2. Save this 'petstore' collection into github repo.
3. Run this 'petstore' collection in Github Actions
The example is here https://github.com/JauniusPinelis/Pipeline-testing/blob/main/.github/workflows/main.yml

4. Remove failing requests from collection to pass Postman check.



